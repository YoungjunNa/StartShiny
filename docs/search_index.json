[
["index.html", "처음 시작하는 R Shiny Welcome", " 처음 시작하는 R Shiny Youngjun Na (https://github.com/YoungjunNa) Welcome Shiny is an R package that makes it easy to build interactive web apps straight from R. You can host standalone apps on a webpage or embed them in R Markdown documents or build dashboards. — Official Shiny Website 샤이니(shiny)는 R Studio에서 개발한 R 패키지입니다. 샤이니를 이용하면 R 언어만을 사용해서 입력값이 바뀜에 따라 함께 바뀌는 결과값 또는 그래프 등을 보여주는 애플리케이션을 (비교적 손쉽게) 만들 수 있습니다. Shiny 공식 홈페이지에서는 이를 이용해 만든 다양한 애플리케이션을 보여주고 있습니다. 이 책에서 길게 설명하는 것보다 직접 예제들을 살펴보면 어렵지 않게 샤이니가 할 수 있는 일들에 대한 감을 잡을 수 있을 것입니다. 데이터 과학의 작업 흐름의 제일 마지막 단계는 분석한 내용을 다른사람과 소통하는 (Communicate) 것 입니다. 그리고 샤이니는 데이터 과학자가 CSS나 JavaScript 같은 웹 언어를 모르더라도 사용자가 입력한 값에 즉시 반응하는 애플리케이션을 만들 수 있게 해줍니다. 그럼으로써 들어오는 데이터가 수시로 (어쩌면 실시간으로) 바뀌는 환경에서도 항상 자동화되고 일관된 레포트를 이용해 소통할 수 있게 해줍니다. 이 책(또는 웹페이지)은 1) R을 어느정도 사용할 수 있고 2) Shiny를 배우고 싶은 마음이 막 들기 시작한 독자를 위해 쓰였습니다. 아래에 제시된 4가지를 다 알고 있다면 당신은 이 책을 시작할 충분한 준비가 된 것입니다. Shiny를 시작해 보고 싶은 마음이 있다. R과 R Studio를 설치할 수 있다. install.package() 와 library()함수를 사용할 수 있다. ggplot2로 그래프를 그릴 수 있다. pipe 연산자(%&gt;%)를 사용할 수 있다. 객체(Object)와 함수(Function)이라는 용어를 이해한다. 만약 준비가 되지 않았다면 제가 추천하는 두권의 책을 먼저 읽고 오면 좋을 것 같습니다. 읽는 순서는 중요하지 않지만 만약 한권만 읽을 수 있다면 첫번째 책을 추천하고 싶습니다. 번역된 책도 있지만 원서의 경우 무료로 공개가 되어 있습니다. R을 이용한 데이터과학 손에 잡히는 R 프로그래밍 최대한 간결하고 쉽게 쓰려고 노력했습니다. 내용이 많아지면 오히려 큰 흐름에 혼란을 줄 수 있을 수도 있을 것 같아 (상당히) 많은 부분을 덜어냈습니다. 부디 이 책에 다루지 않은 내용들 때문에 샤이니의 가능성을 저평가 하지 않길 바랍니다. 샤이니에 대한 지식이 10까지 있다면 본 책은 0에서 1까지 가는 것을 목표로 하고 있습니다. 만약 앞으로의 시간들을 통해 당신이 샤이니에 대한 재미를 조금이라도 느낄 수 있다면 성공입니다. 저는 그 재미와 호기심이 당신을 더 높은 곳까지 이끌어 줄 것이라 믿습니다. 자 그럼 시작해 볼까요? 집앞으로 산책을 나서는 가벼운 마음 정도면 충분합니다. 신발끈을 묶기 위해선 먼저 다음 함수가 필요할 것 같습니다. install.package(&quot;shiny&quot;) install.package(&quot;tidyverse&quot;) "],
["web.html", "Chapter 1 서버와 유저인터페이스 1.1 서버와 클라이언트 1.2 샤이니 서버와 유저인터페이스 1.3 더 알아보기", " Chapter 1 서버와 유저인터페이스 인류가 생산하는 거의 모든 정보는 웹(World Wide Web; W3)에 담겨 있습니다. 우리는 아마도 거의 매일 크롬, 사파리, 파이어폭스 등 웹브라우저라고 불리는 프로그램을 통해, 웹에 담겨있는 문서나 이미지 등의 정보를 읽어들여 컴퓨터나 스마트폰의 화면을 통해 보고 있습니다. 각 웹페이지에 있는 링크를 따라 다른 문서로 이동하거나 그 페이지로 정보를 보내기도 합니다. 우리는 이것을 웹서핑이라고 부르죠. 1.1 서버와 클라이언트 우리는 인터넷을 통해 어딘가에 저장되어 있는 웹페이지를 읽습니다. 이렇게 웹이 저장되어 있는 (어딘가에 있는 그) 컴퓨터를 서버(Server)라고 합니다. 클라이언트(Client)는 이러한 정보나 서비스를 소비하는 사람을 의미합니다. 인터넷은 수많은 서버들이 거미줄처럼 얽혀서 형성되어 있습니다. 1.2 샤이니 서버와 유저인터페이스 샤이니는 R을 서버로 이용하여 결과물을 웹페이지에 보여주는 애플리케이션이라고 생각하시면 좋을 것 같습니다. 조금 나누어 설명하자면: R이 실행되고 있는 서버 컴퓨터가 있고 다른 곳에 있는 클라이언트가 웹브라우저를 통해 서버에 정보(input 값)를 전달해주면 그것을 서버에 있는 R이 그래프와 같은 결과값을 계산해 다시 클라이언트에게 보여주는 것 입니다. 브라우저를 통해 사용자에게 보여지는 화면을 UI (User Interface) 라고 부릅니다. UI는 사용자에게 표나 그래프로 정보를 제공해주기도 하고 사용자가 서버로 정보를 보낼 수 있는 화면을 제공하기도 합니다. 우리가 자주 접속하는 Google이나 네이버와 같은 웹페이지에서 보이는 화면을 생각하면 쉽게 상상해 볼 수 있을 것입니다. 샤이니는 UI와 Server로 이루어져 있습니다. 그리고 이 둘은 언제나 함께 동작합니다. 서버에서 UI로 화면을 표시해 주기도 하고, UI에서 서버로 값을 전달해 주기도 합니다. 샤이니의 가장 기본적인 뼈대는 다음과 같습니다. library(shiny) ui &lt;- fluidPage( ) server &lt;- function(input, output, session) { } shinyApp(ui, server) 위 R 코드에는 ui와 server라는 두개의 객체가 존재합니다. 그리고 shinyApp(ui, server) 이라는 함수는 이 두개의 객체들을 하나로 묶어 웹애플리케이션의 형태로 사용자들에게 보여줍니다. 1.3 더 알아보기 혹시 웹에 대해 더 알고 싶은 경우 생활코딩의 WEB1 이라는 온라인 수업을 추천합니다. 이 수업은 무료이며 마치는데 생각보다 많은 시간이 걸리지 않습니다. 두세시간 정도 egoing 선생님의 친절한 강의를 듣고 나면 금새 웹과 친해질 수 있을 것입니다. 무엇보다 결과적으로 샤이니를 더 깊게 이해할 수 있게 될것입니다. "],
["reactive-chain.html", "Chapter 2 데이터의 흐름", " Chapter 2 데이터의 흐름 샤이니를 알려면 먼저 데이터의 흐름을 알아야 합니다. 샤이니는 한쪽의 데이터가 바뀌면 연결된 다른 데이터들도 함께 바뀌는 데이터 흐름을 가지고 있습니다. 이를 반응성(Reactivity)이라고 합니다. 이러한 데이터의 흐름은 ui와 server를 넘나들며 하나의 체인처럼 연결되어 있고 이것을 반응성 체인(Reactive chain) 이라고 표현합니다. 예를 들어 살펴보겠습니다. 아직 직접 코드를 실행해보지 않아도 됩니다. 자세히 들여다 봐주세요. library(shiny) ui &lt;- fluidPage( numericInput( inputId = &quot;my_input&quot;, label = &quot;Input value:&quot;, value = 100 ), plotOutput(&quot;plot1&quot;) ) server &lt;- function(input, output, session) { output$plot1 &lt;- renderPlot({ plot(input$my_input) }) } shinyApp(ui, server) numericInput()은 input$my_input에 value = 100이란 값을 부여합니다. renderPlot() 함수는 input$my_input에 지정된 값을 읽어 그래프를 그립니다. 이는 output$plot1 &lt;- renderPlot()이라는 객체에 지정됩니다. 지정된 plot1은 ui 내에 plotOutput(&quot;plot1&quot;) 함수로 전달되어 UI에 그래프를 출력합니다. Figure 2.1: 샤이니 데이터들은 반응성 체인으로 연결되어 있다. 비록 복잡하고 조금은 추상적인 내용이지만 샤이니에서 반응성 체인의 원리를 이해하는 것은 매우 중요하기 때문에 여러번 읽으면서 꼭 이해하시길 바랍니다. 이번 고개만 잘 넘기면 이제 기술적인 부분만이 남았습니다. 화이팅! "],
["structure.html", "Chapter 3 ui와 server의 작성방식", " Chapter 3 ui와 server의 작성방식 샤이니의 ui와 server는 코드를 작성 하는 방식에 차이가 있습니다. ui는 함수가 중첩되는 형태로 코딩이 됩니다. 이는 샤이니 애플리케이션의 UI가 결국 웹의 언어인 html의 형식으로 변환되어 출력되기 때문에 html의 문법을 닮은 모양을 갖는 것입니다. ui &lt;- fluidPage( titlePanel(&quot;hello world!&quot;), sliderInput(&quot;slider_example&quot;), plotOutput(&quot;plot1&quot;), tableOutput(&quot;table1&quot;) ) server 함수는 ui 함수들과 달리 R의 코딩 패턴을 따릅니다. 한마디로 ui는 콤마(,)로 함수들이 이어져 있지만 server는 객체나 함수를 구분하는 데 콤마를 사용하지 않습니다. server &lt;- function(input, output, session) { output$plot1 &lt;- renderPlot({ plot(iris$Sepal.Length, iris$Sepal.Width) }) output$table1 &lt;- renderTable(iris) } 이제 server에 대한 생각은 잠시 잊으셔도 좋습니다. 이번 챕터에서는 ui에서 일어나고 있는 일들에 대해 알아보도록 하겠습니다. "],
["ui1.html", "Chapter 4 유저인터페이스1: ui &lt;- 4.1 *Input()", " Chapter 4 유저인터페이스1: ui &lt;- 본 챕터에서는 ui의 구성요소 중 샤이니가 사용자로부터 정보를 전달받는 방법에 대해 알아보도록 하겠습니다. 4.1 *Input() 4.1.1 입력위젯의 종류 Figure 4.1: 샤이니 입력 위젯의 종류. 샤이니가 동작하기 위해서는 애플리케이션을 사용하는 유저로부터 데이터값(input 값)을 받을 수 있어야 합니다. 샤이니에는 이러한 입력값을 받을 수 있는 여러가지 입력 위젯을 만드는 함수들이 있습니다. 이러한 입력위젯(Control widgets) 함수를 이용해 UI에 위와같은 내용을 출력합니다. 샤이니에서 기본적으로 제공하는 입력위젯과 이를 만드는 함수는 다음과 같습니다. Widget Function actionButton 액션버튼 checkboxGroupInput 체크박스 그룹 checkboxInput 체크박스 하나 dateInput 날짜 선택 dataRangeInput 날짜 구간 선택 fileInput 파일 업로드 helpText 도움말 4.1.2 입력위젯의 특징 (전부 다는 아니지만) 대부분 numericInput(), textInput(), sliderInput(), fileInput()과 같이 *Input으로 끝나는 이름을 갖습니다. 함수의 첫번째 인자는 inputId =입니다. 두번째 인자는 label =로 위젯이 UI에 보여질 때 함께 보이는 제목입니다. value = 인자를 통해 초기값을 설정할 수 있다. "],
["server.html", "Chapter 5 서버: server &lt;-", " Chapter 5 서버: server &lt;- We have finished a nice book. render*() "],
["ui2.html", "Chapter 6 유저인터페이스2: ui &lt;- 6.1 *Output()", " Chapter 6 유저인터페이스2: ui &lt;- 6.1 *Output() We have finished a nice book. "],
["reactive.html", "Chapter 7 반응성 표현식: reactive()", " Chapter 7 반응성 표현식: reactive() We have finished a nice book. "],
["dashboard.html", "Chapter 8 대시보드: shinydashboard패키지", " Chapter 8 대시보드: shinydashboard패키지 We have finished a nice book. "],
["deploy.html", "Chapter 9 앱 배포: shinyapps.io", " Chapter 9 앱 배포: shinyapps.io We have finished a nice book. "],
["extensions.html", "Chapter 10 Extensions", " Chapter 10 Extensions We have finished a nice book. "],
["references.html", "References", " References "]
]
